% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-cv.R
\name{plot.cv_poisson_rt}
\alias{plot.cv_poisson_rt}
\title{Plot Cross-Validated trendfilter}
\usage{
\method{plot}{cv_poisson_rt}(x, which_lambda = c("cv_scores", "lambda.min", "lambda.1se"), ...)
}
\arguments{
\item{x}{the result of `cv_trendfilter()` of class `cv_trendfilter`}

\item{which_lambda}{select which solutions to show.

If not provided, the cross validation score will be plotted. If provided a
vector of `lambda` values, the corresponding \deqn{\theta} estimates will be
plotted.

If provided a string, it
must be either one of `lambda.min`, `lambda.1se`, or `cv_scores`.

 * `cv_scores`: plot the cross validation score curve. Vertical lines
   indicate `lambda.min` and `lambda.1se` (from left to right).
 * `lambda.min`: plot the estimates corresponding to the lambda
   that minimizes the cross validation score.
 * `lambda.1se`: plot estimates corresponding to the largest lambda whose
   corresponding CV score is within 1 standard error of the
   minimal cross validation score.
 * If NULL, all estimated \deqn{theta}'s are plotted.}

\item{...}{Not used.}
}
\value{
plot of cv scores
}
\description{
Plot Cross-Validated trendfilter
}
\examples{
x <- 1:100 / 101 * 2 * pi
y <- sin(x) + .2 * rnorm(100)
cv <- cv_trendfilter(y, x, nlambda = 20L)
plot(cv)
plot(cv, which_lambda = cv$lambda[1])
plot(cv, which_lambda = "lambda.min")
plot(cv, which_lambda = "lambda.1se")
plot(cv, NULL)
}
