% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-cv.R
\name{plot.cv_trendfilter}
\alias{plot.cv_trendfilter}
\title{Plot Cross-Validated trendfilter}
\usage{
\method{plot}{cv_trendfilter}(x, which_lambda = c("cv_scores", "lambda_min", "lambda_1se"), ...)
}
\arguments{
\item{x}{the result of \code{\link[=cv_trendfilter]{cv_trendfilter()}} of class \code{cv_trendfilter}}

\item{which_lambda}{select which solutions to show.
If not provided, the cross validation score will be plotted. If provided a
vector of \code{lambda} values, the corresponding \eqn{\theta} estimates will be
plotted. If provided a string, it must be either one of \code{cv_scores},
\code{lambda_min}, or \code{lambda_1se}.
\itemize{
\item \code{cv_scores}: plot the cross validation score curve. Vertical lines
indicate \code{lambda_min} and \code{lambda_1se} (from left to right).
\item \code{lambda_min}: plot the estimates corresponding to the lambda
that minimizes the cross validation score.
\item \code{lambda_1se}: plot estimates corresponding to the largest lambda whose
corresponding CV score is within 1 standard error of the
minimal cross validation score.
\item If \code{NULL}, all estimated \eqn{\theta}'s are plotted.
}}

\item{...}{Not used.}
}
\value{
plot of cv scores
}
\description{
Plot Cross-Validated trendfilter
}
\examples{
x <- 1:100 / 101 * 2 * pi
y <- sin(x) + .2 * rnorm(100)
cv <- cv_trendfilter(y, x, nlambda = 20L)
plot(cv)
plot(cv, which_lambda = cv$lambda[1])
plot(cv, which_lambda = "lambda_min")
plot(cv, which_lambda = "lambda_1se")
plot(cv, NULL)
}
