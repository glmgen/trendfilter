% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-trendfilter.R
\name{predict.trendfilter}
\alias{predict.trendfilter}
\title{Predict with trendfilter at new (interior) design points}
\usage{
\method{predict}{trendfilter}(object, newx = NULL, lambda = NULL, deriv = 0L, ...)
}
\arguments{
\item{object}{the result of `trendfilter()`}

\item{newx}{numeric vector of new design points at which to evaluate the. The
default, `NULL` returns the estimates at the original `x` values.}

\item{lambda}{Vector. A user supplied sequence of tuning parameters which
determines the balance between data fidelity and
smoothness of the estimated curve; larger `lambda` results in a smoother
estimate. The default, `NULL`
results in an automatic computation based on `nlambda`, the largest value
of `lambda` that would result in a maximally smooth estimate, and `lambda_min_ratio`.
Supplying a value of `lambda` overrides
this behaviour. It is likely better to supply a
decreasing sequence of `lambda` values than a single (small) value. If
supplied, the user-defined `lambda` sequence is automatically sorted in
decreasing order.}

\item{deriv}{integer; the order of the derivative to be evaluated. Default is 0.}

\item{...}{not used}
}
\value{
a vector or matrix with rows corresponding to `newx` and columns
  corresponding to `lambda`
}
\description{
Predict with trendfilter at new (interior) design points
}
\examples{
x <- 1:100 / 101 * 2 * pi
y <- sin(x) + .2 * rnorm(100)
out <- trendfilter(y, x, nlambda = 20L)
predict(out, newx = 1:6, lambda = out$lambda[10])
predict(out, newx = 1:6)
}
